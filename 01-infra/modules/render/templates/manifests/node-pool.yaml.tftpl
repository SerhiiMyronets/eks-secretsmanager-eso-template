apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: ${karpenter_nodepool_config.name}
spec:
  template:
    metadata:
      labels:
        type: ${karpenter_nodepool_config.capacity_type}
    spec:
      nodeClassRef:
        name: ${karpenter_nodepool_config.name}
      taints:
        - key: "spotOnly"
          value: "true"
          effect: "NoSchedule"
      requirements:
        - key: "karpenter.sh/capacity-type"
          operator: In
          values: ["${karpenter_nodepool_config.capacity_type}"]
        - key: "node.kubernetes.io/instance-type"
          operator: In
          values: [${join(", ", formatlist("\"%s\"", karpenter_nodepool_config.instance_types))}]
  limits:
    cpu: "${karpenter_nodepool_config.cpu_limit}"
  disruption:
    consolidationPolicy: WhenUnderutilized
    ttlSecondsAfterEmpty: ${karpenter_nodepool_config.ttl_minutes}
  weight: ${karpenter_nodepool_config.weight}


apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: spot
  annotations:
    kubernetes.io/description: "NodePool for provisioning spot capacity"
spec:
  template:
    spec:
      requirements:
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["spot"]
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
        - key: karpenter.k8s.aws/instance-category
          operator: In
          values: ["c", "m", "r"]
        - key: karpenter.k8s.aws/instance-generation
          operator: Gt
          values: ["2"]
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: default